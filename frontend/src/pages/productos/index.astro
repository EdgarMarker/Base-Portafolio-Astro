---
import "../../styles/products.css";

import { Picture } from "astro:assets";
import Layout from "../../layouts/Layout.astro";
import CardProduct from "../../components/ui/card/CardProduct";
import { getProductsPageData } from "../../_data/productsPage.data";
import { getProductData } from "../../_data/product.data";
import CustomPortableText from "../../components/ui/portableText/CustomPortableText";

const productsPageData = await getProductsPageData();
const recentProductData = await getProductData();
---

<Layout
  title={productsPageData.seo.string_titleSeo}
  desc={productsPageData.seo.text_dscSeo}
  keywords={productsPageData.seo.text_keySeo}
>
  <section id="hero">
    <div class="column__2">
      <div class="col__left">
        <h1>{productsPageData.hero.string_h1}</h1>
        <CustomPortableText
          hasImg={false}
          data={productsPageData.hero.block_info}
          client:only="react"
        />
        <a class="btn">{productsPageData.hero.string_btn}</a>
      </div>
      <div class="col__right">
        <Picture
          src={productsPageData.hero.img_hero.media.url}
          alt={productsPageData.hero.img_hero.alt?.altText || ""}
          formats={["webp", "avif"]}
          fallbackFormat="jpeg"
          inferSize={true}
          quality={"high"}
          densities={[1.5, 2]}
        />
      </div>
    </div>
  </section>
  <section id="products__product">
    <div class="column__1">
      <ul role="list" class="listado__x3">
        {
          recentProductData
            .sort(
              (a, b) =>
                new Date(a.general.dateTime_publishedAt).getTime() -
                new Date(b.general.dateTime_publishedAt).getTime()
            )
            .map((data) => (
              <CardProduct
                className="card__recentProduct"
                data={data}
                from="productos"
              >
                <Picture
                  src={data.card.img_card.media.url}
                  alt={data.card.img_card.alt?.altText || ""}
                  formats={["webp", "avif"]}
                  fallbackFormat="jpeg"
                  inferSize={true}
                  quality={"high"}
                  densities={[1.5, 2]}
                />
              </CardProduct>
            ))
        }
      </ul>
    </div>
  </section>
</Layout>
